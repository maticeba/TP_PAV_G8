<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>