<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ovkjOkPUsz8AAAAASUVORK5CYII=
</value>
  </data>
</root>